trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  API_Keys: Test_Secrets
  version: 2.1.0
  moduleName: DattoAPI

jobs:

# Windows - nonCore

  - job: Windows
    timeoutInMinutes: 10
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      displayName: Install Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation
      name: BuildDocumentation
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1
        arguments: -Verbose

    - task: PowerShell@2
      displayName: Build Module
      name: BuildModule
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-moduleBuild.ps1
        arguments: -version $(version)

    - task: PowerShell@2
      displayName: Pester Tests
      name: PesterTests
      inputs:
        pwsh: false
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -version $(version) -buildTarget built -Api_Key_Public $(API_UserName) -Api_Key_Secret $(API_Password) -IncludeTag apiCalls -output Detailed

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: module
        PathtoPublish: $(Build.SourcesDirectory)/build/$(moduleName)/$(version)

# Windows - Core

  - job: WindowsPSCore
    timeoutInMinutes: 10
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: PowerShell@2
      displayName: Install Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-moduleBuild.ps1
        arguments: -version $(version)

    - task: PowerShell@2
      displayName: Pester Tests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -version $(version) -buildTarget built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: module
        PathtoPublish: $(Build.SourcesDirectory)/build/$(moduleName)/$(version)

# Linux - Ubuntu

  - job: Ubuntu
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: PowerShell@2
      displayName: Install Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-moduleBuild.ps1
        arguments: -version $(version)

    - task: PowerShell@2
      displayName: Pester Tests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -version $(version) -buildTarget built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: module
        PathtoPublish: $(Build.SourcesDirectory)/build/$(moduleName)/$(version)

# Linux - macOS

  - job: macOS
    timeoutInMinutes: 10
    pool:
      vmImage: 'macOS-latest'

    steps:


    - task: PowerShell@2
      displayName: Install Prerequisites
      name: InstallPrerequisites
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Install-Prerequisites.ps1

    - task: PowerShell@2
      displayName: Build Documentation
      name: BuildDocumentation
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-HelpContent.ps1

    - task: PowerShell@2
      displayName: Build Module
      name: BuildModule
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-moduleBuild.ps1
        arguments: -version $(version)

    - task: PowerShell@2
      displayName: Pester Tests
      name: PesterTests
      inputs:
        pwsh: true
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/Invoke-PesterTests.ps1
        arguments: -version $(version) -buildTarget built

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      name: PublishArtifact
      inputs:
        ArtifactName: module
        PathtoPublish: $(Build.SourcesDirectory)/build/$(moduleName)/$(version)
